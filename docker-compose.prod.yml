services:
  ## Postgres
  postgresql:
    container_name: ujepsoft-postgresql-prod
    image: 'bitnami/postgresql:latest'
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres # TODO: CHANGE THIS ON PRODUCTION @{POSTGRES_PASSWORD}
      - POSTGRES_DB=ujepsoft
    volumes:
      - postgresql_data:/bitnami/postgresql
      - postgresql_pre_initdb:/docker-entrypoint-preinitdb.d
      - postgresql_initdb:/docker-entrypoint-initdb.d
    ports:
      - '127.0.0.1:5432:5432'
    restart: always
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 30m
      timeout: 10s
      retries: 5
      start_period: 30s

  ## Redis
  redis:
    build: redis
    container_name: ujepsoft-redis-prod
    command: redis-server --loglevel warning --requirepass ${REDIS_PASSWORD} --dir /data
    volumes: 
      - redis:/data
    ports:
      - '6379:6379'
    restart: always
    healthcheck:
      test: [ "CMD-SHELL", "redis-cli ping" ]
      interval: 30m
      timeout: 10s
      retries: 5
      start_period: 30s

  ## Backend
  backend:
    build:
      context: backend
      dockerfile: Dockerfile.prod
    container_name: ujepsoft-backend-prod
    volumes:
      - ./backend:/backend
    environment:
      - DJANGO_PRODUCTION=true
      - DJANGO_ALLOWED_HOSTS=localhost,webapp,10.0.0.16,backend
      - DJANGO_CSRF_TRUSTED_ORIGINS=http://localhost:8080
      - DJANGO_MEDIA_URL=http://localhost:8080/backend/media/
      - DJANGO_STATIC_URL=http://localhost:8080/backend/static/
      - DJANGO_DB_NAME=ujepsoft
      - DJANGO_DB_USER=postgres
      - DJANGO_DB_PASSWORD=postgres # TODO: CHANGE THIS ON PRODUCTION @{POSTGRES_PASSWORD}
      - DJANGO_DB_HOST=postgresql
      - DJANGO_DB_PORT=5432
      - DJANGO_REDIS_LOCATION=redis://redis:6379/1
      - REDIS_PASSWORD=${REDIS_PASSWORD}
      - DJANGO_BASE_URL=http://localhost:8080/
      - DJANGO_EMAIL_HOST=smtp.office365.com
      - DJANGO_EMAIL_PORT=587
      - DJANGO_EMAIL_USE_TLS=true
      - DJANGO_EMAIL_HOST_USER=ujepsoft@hotmail.com
      - DJANGO_EMAIL_HOST_PASSWORD=${DJANGO_EMAIL_HOST_PASSWORD}
      - DJANGO_EMAIL_FROM=ujepsoft@hotmail.com
      - DJANGO_SECRET=${DJANGO_SECRET}
      - GITHUB_TOKEN=${GITHUB_TOKEN}
      - GITHUB_USERNAME=matej-kaska
      - REDIS-TIMEOUT=15 # TODO: CHANGE THIS ON PRODUCTION
      - MAX_FILE_SIZE=134217728 # 128 MB
      - MAX_TOTAL_FILES_SIZE=536870912 # 512 MB
    restart: always
    healthcheck:
      test: [ "CMD-SHELL", "curl -f http://localhost:8000/api/test" ]
      interval: 30m
      timeout: 10s
      retries: 3
      start_period: 30s

  ## Frontend
  frontend:
    build:
      context: frontend
      dockerfile: Dockerfile.prod
    container_name: ujepsoft-frontend-prod
    depends_on:
      - backend
      - redis
    environment:
      - NODE_ENV=production
      - VITE_GITHUB_USERNAME=matej-kaska
    restart: always
    healthcheck:
      test: [ "CMD-SHELL", "curl -f http://localhost:3000" ]
      interval: 30m
      timeout: 10s
      retries: 3
      start_period: 30s

  ## NGINX
  edge:
    build: edge
    container_name: ujepsoft-edge-prod
    ports:
      - '8080:8080'
    volumes:
      - ./edge/ujepsoft.conf:/opt/bitnami/nginx/conf/server_blocks/ujepsoft.conf:ro
      - ./backend/media:/app/media
      - ./backend/staticfiles:/app/static
    depends_on:
      - frontend
      - backend  
    restart: always
    healthcheck:
      test: [ "CMD-SHELL", "/usr/bin/curl -f http://localhost:8080" ]
      interval: 30m
      timeout: 10s
      retries: 3
      start_period: 30s

volumes:
  postgresql_data:
    driver: local
  postgresql_initdb:
    driver: local
  postgresql_pre_initdb:
    driver: local
  redis:
    driver: local